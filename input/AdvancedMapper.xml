<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.AdvancedMapper">

    <!-- 共通SQL断片 -->
    <sql id="baseColumns">
        u.user_id, u.username, u.email, u.created_at, u.status
    </sql>
    
    <sql id="userJoins">
        LEFT JOIN profiles p ON u.user_id = p.user_id
        LEFT JOIN user_roles ur ON u.user_id = ur.user_id
        LEFT JOIN roles r ON ur.role_id = r.role_id
    </sql>

    <!-- 複雑な動的SQLクエリ -->
    <select id="searchUsers" resultType="com.example.dto.UserDto">
        SELECT 
            <include refid="baseColumns"/>,
            p.first_name,
            p.last_name,
            r.role_name
        FROM users u
        <include refid="userJoins"/>
        <where>
            <if test="username != null and username != ''">
                AND u.username LIKE #{username}
            </if>
            <if test="email != null and email != ''">
                AND u.email = #{email}
            </if>
            <if test="status != null">
                AND u.status = #{status}
            </if>
            <if test="roleIds != null and roleIds.size() > 0">
                AND r.role_id IN
                <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
                    #{roleId}
                </foreach>
            </if>
            <choose>
                <when test="sortBy == 'recent'">
                    AND u.created_at >= #{recentDate}
                </when>
                <when test="sortBy == 'active'">
                    AND u.last_login_at >= #{activeDate}
                </when>
                <otherwise>
                    AND u.status = 'active'
                </otherwise>
            </choose>
        </where>
        <choose>
            <when test="orderBy == 'username'">
                ORDER BY u.username ASC
            </when>
            <when test="orderBy == 'created'">
                ORDER BY u.created_at DESC
            </when>
            <otherwise>
                ORDER BY u.user_id ASC
            </otherwise>
        </choose>
    </select>

    <!-- 動的UPDATE文 -->
    <update id="updateUserProfile">
        <bind name="pattern" value="'%' + keyword + '%'"/>
        UPDATE users u
        <include refid="userJoins"/>
        <set>
            <if test="username != null">u.username = #{username},</if>
            <if test="email != null">u.email = #{email},</if>
            <if test="status != null">u.status = #{status},</if>
            <if test="profile != null">
                <if test="profile.firstName != null">p.first_name = #{profile.firstName},</if>
                <if test="profile.lastName != null">p.last_name = #{profile.lastName},</if>
            </if>
            u.updated_at = NOW()
        </set>
        WHERE u.user_id = #{userId}
    </update>

    <!-- 複雑な集計クエリ -->
    <select id="getUserStatistics" resultType="com.example.dto.UserStatsDto">
        <![CDATA[
        SELECT 
            u.user_id,
            u.username,
            COUNT(DISTINCT o.order_id) as total_orders,
            SUM(o.total_amount) as total_spent,
            AVG(o.total_amount) as avg_order_value,
            MAX(o.order_date) as last_order_date
        FROM users u
        LEFT JOIN customers c ON u.user_id = c.user_id
        LEFT JOIN orders o ON c.customer_id = o.customer_id
        ]]>
        <where>
            <if test="userIds != null and userIds.size() > 0">
                u.user_id IN
                <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
            <if test="startDate != null">
                <![CDATA[ AND o.order_date >= #{startDate} ]]>
            </if>
            <if test="endDate != null">
                <![CDATA[ AND o.order_date <= #{endDate} ]]>
            </if>
        </where>
        GROUP BY u.user_id, u.username
        <if test="minOrders != null">
            <![CDATA[ HAVING COUNT(DISTINCT o.order_id) >= #{minOrders} ]]>
        </if>
        ORDER BY total_spent DESC
    </select>

    <!-- 複雑なサブクエリと動的SQL -->
    <select id="getTopCustomersWithDetails" resultType="com.example.dto.CustomerDetailDto">
        WITH customer_stats AS (
            SELECT 
                c.customer_id,
                c.user_id,
                COUNT(o.order_id) as order_count,
                SUM(o.total_amount) as total_amount
            FROM customers c
            LEFT JOIN orders o ON c.customer_id = o.customer_id
            <where>
                <if test="categoryId != null">
                    EXISTS (
                        SELECT 1 FROM order_items oi
                        INNER JOIN products p ON oi.product_id = p.product_id
                        WHERE oi.order_id = o.order_id
                        AND p.category_id = #{categoryId}
                    )
                </if>
            </where>
            GROUP BY c.customer_id, c.user_id
        )
        SELECT 
            cs.customer_id,
            u.username,
            u.email,
            cs.order_count,
            cs.total_amount,
            p.first_name,
            p.last_name
        FROM customer_stats cs
        INNER JOIN users u ON cs.user_id = u.user_id
        LEFT JOIN profiles p ON u.user_id = p.user_id
        <where>
            <if test="minAmount != null">
                cs.total_amount >= #{minAmount}
            </if>
            <if test="minOrders != null">
                AND cs.order_count >= #{minOrders}
            </if>
        </where>
        ORDER BY cs.total_amount DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

</mapper>